rules_version = '2';
service cloud.firestore {
    match /databases/{database}/documents {
        // Auth utility functions
        function isAdmin(projectId) {
            return request.auth.token.role == 'admin' && request.auth.token.project == projectId;
        }
        function isOrga(projectId) {
            return request.auth.token.role == 'orga' && request.auth.token.project == projectId;
        }
        // Requests to Add Orga Users
        match /project/{projectId}/addOrgaRequest {
            allow get: if isAdmin(projectId);
            allow create: if isAdmin(projectId)
                             && request.resource.data.keys().hasOnly(['name', 'email'])
                             && request.resource.data.name is string
                             && request.resource.data.email is string;
        }
        // Orga Users
        match /project/{projectId}/orga {
            allow read: if isAdmin(projectId) && isOrga(projectId);
            allow delete: if isAdmin(projectId);
        }
        // Login Requests
        match /loginRequests/{documentId} {
            allow create: if true
                             && request.resource.data.keys().hasOnly(['email', 'host'])
                             && request.resource.data.email is string
                             && request.resource.data.host is string;
            allow get: if true;
        }
    }
}